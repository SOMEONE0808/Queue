{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Queue Module is a module that proceeds tasks sequentially.</p>"},{"location":"api/","title":"API","text":""},{"location":"api/#global-methods","title":"Global Methods","text":""},{"location":"api/#queuemodulenew","title":"QueueModule.new","text":"<pre><code>QueueModule.new(name: any, DebugMode: boolean) -&gt; Queue\n</code></pre> <p>Create Queue instance if name is nil, the queue will not have any name</p>"},{"location":"api/#queue-api","title":"Queue API","text":""},{"location":"api/#queueadd","title":"Queue:Add","text":"<p><pre><code>Queue:Add(parameters: table, callback, noActivate: boolean) -&gt; queueId\n</code></pre> Add task to queue if noActivate is true, it will not do Queue:ActivateAsync()</p>"},{"location":"api/#queueexpire","title":"Queue:Expire","text":"<p><pre><code>Queue:Expire(queueId: number) -&gt; queueId or -1\n</code></pre> Expire queue which id is queueId if it can't find queue with id is queueId, it returns -1</p>"},{"location":"api/#queuewait","title":"Queue:Wait","text":"<p><pre><code>Queue:Wait(length: number)\n</code></pre> Stop queue for length sec if length isn't number, queue will stop until activated</p>"},{"location":"api/#queueactivate","title":"Queue:Activate","text":"<p><pre><code>Queue:Activate(activateId: number)\n</code></pre> Activate queue</p>"},{"location":"api/#queueactivateasync","title":"Queue:ActivateAsync","text":"<p><pre><code>Queue:ActivateAsync(activateId: number)\n</code></pre> Activate queue without yielding</p>"},{"location":"guide/example-alert/","title":"Example: Alert","text":"<p>UI) ScreenGui -&gt; (LocalScript, TextLabel) <pre><code>local TweenService = game:GetService(\"TweenService\")\nlocal tweenInfo = TweenInfo.new(0.5)\n\nlocal Queue = require(game.ReplicatedStorage.Modules.Queue)\nlocal queue = Queue.new(\"text\", true)\n\nlocal Gui = script.Parent\nlocal TextLabel = Gui:WaitForChild(\"TextLabel\")\n\nlocal pos = TextLabel.Position\nlocal tween = TweenService:Create(\n    TextLabel, tweenInfo, {Position = pos - UDim2.fromScale(0, 0.05),\n        TextTransparency = 1})\n\nlocal function F(id, text)\n    TextLabel.Position = pos\n    TextLabel.Text = id\n    TextLabel.TextTransparency = 0\n    task.wait(1)\n    tween:Play()\n    tween.Completed:Wait()\nend\n\nqueue:Wait(3)\nfor i = 1, 5 do\n    task.spawn(function()\n        queue:Add({1, 2, 3}, F)\n    end)\nend\n</code></pre></p>"},{"location":"guide/how-to-use/","title":"How to use","text":"<pre><code>local QueueModule = require(game.ReplicatedStorage.Modules.Queue)\nlocal Queue = QueueModule.new(\"Queue\", true)\n\nlocal function F(...)\n    print(...)\n    task.wait(1)\nend\n\n\nQueue:Wait(1)\nfor i = 1, 5 do\n    Queue:Add({1, 2, 3}, F)\nend\n</code></pre>"},{"location":"guide/installation/","title":"Installation","text":""},{"location":"guide/installation/#way-1-model-file","title":"Way 1: Model File","text":"<ul> <li>Download the <code>rbxm</code> model file from Roblox Library</li> <li>Insert the model into Studio</li> </ul>"}]}